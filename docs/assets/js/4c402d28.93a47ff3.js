"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[57809],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return f}});var r=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=r.createContext({}),l=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=l(e.components);return r.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,p=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=l(n),f=i,y=u["".concat(p,".").concat(f)]||u[f]||d[f]||a;return n?r.createElement(y,o(o({ref:t},c),{},{components:n})):r.createElement(y,o({ref:t},c))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=u;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var l=2;l<a;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},9449:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return p},default:function(){return f},frontMatter:function(){return s},metadata:function(){return l},toc:function(){return d}});var r=n(87462),i=n(63366),a=(n(67294),n(3905)),o=["components"],s={id:"typings_Types.Edit",title:"Interface: Edit",sidebar_label:"Edit",custom_edit_url:null},p=void 0,l={unversionedId:"contributing/api/interfaces/typings_Types.Edit",id:"contributing/api/interfaces/typings_Types.Edit",title:"Interface: Edit",description:"typings/Types.Edit",source:"@site/../docs/contributing/api/interfaces/typings_Types.Edit.md",sourceDirName:"contributing/api/interfaces",slug:"/contributing/api/interfaces/typings_Types.Edit",permalink:"/docs/contributing/api/interfaces/typings_Types.Edit",editUrl:null,tags:[],version:"current",frontMatter:{id:"typings_Types.Edit",title:"Interface: Edit",sidebar_label:"Edit",custom_edit_url:null},sidebar:"contributing",previous:{title:"DecoratedSymbol",permalink:"/docs/contributing/api/interfaces/typings_Types.DecoratedSymbol"},next:{title:"Graph",permalink:"/docs/contributing/api/interfaces/typings_Types.Graph"}},c={},d=[{value:"Hierarchy",id:"hierarchy",level:2},{value:"Properties",id:"properties",level:2},{value:"isReplace",id:"isreplace",level:3},{value:"Defined in",id:"defined-in",level:4},{value:"range",id:"range",level:3},{value:"Defined in",id:"defined-in-1",level:4},{value:"text",id:"text",level:3},{value:"Defined in",id:"defined-in-2",level:4}],u={toc:d};function f(e){var t=e.components,n=(0,i.Z)(e,o);return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/docs/contributing/api/modules/typings_Types"},"typings/Types"),".Edit"),(0,a.kt)("p",null,"Represent a single edit/change in the document"),(0,a.kt)("h2",{id:"hierarchy"},"Hierarchy"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"Edit"))),(0,a.kt)("p",{parentName:"li"},"\u21b3 ",(0,a.kt)("a",{parentName:"p",href:"/docs/contributing/api/interfaces/actions_BringMoveSwap.internal.ExtendedEdit"},(0,a.kt)("inlineCode",{parentName:"a"},"ExtendedEdit"))))),(0,a.kt)("h2",{id:"properties"},"Properties"),(0,a.kt)("h3",{id:"isreplace"},"isReplace"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,a.kt)("strong",{parentName:"p"},"isReplace"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"boolean")),(0,a.kt)("p",null,"If this edit is an insertion, ie the range has zero length, then this\nfield can be set to ",(0,a.kt)("inlineCode",{parentName:"p"},"true")," to indicate that any adjacent empty selection\nshould ",(0,a.kt)("em",{parentName:"p"},"not")," be shifted to the right, as would normally happen with an\ninsertion. This is equivalent to the\n",(0,a.kt)("a",{parentName:"p",href:"https://code.visualstudio.com/api/references/vscode-api#TextEditorEdit"},"distinction"),"\nin a vscode edit builder between doing a replace with an empty range\nversus doing an insert."),(0,a.kt)("h4",{id:"defined-in"},"Defined in"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/cursorless-dev/cursorless-vscode/blob/310f8f9/src/typings/Types.ts#L533"},"src/typings/Types.ts:533")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"range"},"range"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("strong",{parentName:"p"},"range"),": ",(0,a.kt)("a",{parentName:"p",href:"/docs/contributing/api/classes/actions_BringMoveSwap.internal.Range"},(0,a.kt)("inlineCode",{parentName:"a"},"Range"))),(0,a.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/cursorless-dev/cursorless-vscode/blob/310f8f9/src/typings/Types.ts#L521"},"src/typings/Types.ts:521")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"text"},"text"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("strong",{parentName:"p"},"text"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"string")),(0,a.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/cursorless-dev/cursorless-vscode/blob/310f8f9/src/typings/Types.ts#L522"},"src/typings/Types.ts:522")))}f.isMDXComponent=!0}}]);